import { DataSource } from 'typeorm';
import { Category } from '../entities/category.entity';
import { Product } from '../entities/product.entity';

export async function syncProductCounts(dataSource: DataSource) {
    console.log('üîÑ B·∫Øt ƒë·∫ßu ƒë·ªìng b·ªô productCount...');
    
    const categoryRepository = dataSource.getRepository(Category);
    const productRepository = dataSource.getRepository(Product);
    
    try {
        // L·∫•y t·∫•t c·∫£ categories
        const categories = await categoryRepository.find();
        
        for (const category of categories) {
            // ƒê·∫øm s·ªë s·∫£n ph·∫©m cho t·ª´ng category
            const productCount = await productRepository
                .createQueryBuilder('product')
                .where('product.categoryId = :categoryId', { categoryId: category.categoryId })
                .getCount();
            
            // C·∫≠p nh·∫≠t productCount trong database
            await categoryRepository
                .createQueryBuilder()
                .update(Category)
                .set({ productCount })
                .where('categoryId = :categoryId', { categoryId: category.categoryId })
                .execute();
            
            console.log(`‚úÖ Category "${category.categoryName}" (ID: ${category.categoryId}): ${productCount} s·∫£n ph·∫©m`);
        }
        
        console.log('üéâ ƒê·ªìng b·ªô productCount ho√†n th√†nh!');
        
    } catch (error) {
        console.error('‚ùå L·ªói khi ƒë·ªìng b·ªô productCount:', error);
        throw error;
    }
}

