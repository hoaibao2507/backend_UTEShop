import { DataSource } from 'typeorm';
import { NotificationTemplate, NotificationTemplateType } from '../entities/notification-template.entity';

export async function seedNotificationTemplates(dataSource: DataSource) {
  console.log('üå± Seeding notification templates...');

  const templateRepository = dataSource.getRepository(NotificationTemplate);

  // Check if templates already exist
  const existingTemplates = await templateRepository.count();
  if (existingTemplates > 0) {
    console.log('üìã Notification templates already exist, skipping...');
    return;
  }

  const templates = [
    {
      type: NotificationTemplateType.ORDER_STATUS_UPDATE,
      titleTemplate: 'C·∫≠p nh·∫≠t ƒë∆°n h√†ng #{orderId}',
      messageTemplate: 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t tr·∫°ng th√°i: {status}',
      isActive: true,
    },
    {
      type: NotificationTemplateType.PAYMENT_SUCCESS,
      titleTemplate: 'Thanh to√°n th√†nh c√¥ng',
      messageTemplate: 'Thanh to√°n cho ƒë∆°n h√†ng #{orderId} ƒë√£ th√†nh c√¥ng',
      isActive: true,
    },
    {
      type: NotificationTemplateType.PRODUCT_LOW_STOCK,
      titleTemplate: 'S·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng',
      messageTemplate: 'S·∫£n ph·∫©m {productName} trong wishlist s·∫Øp h·∫øt h√†ng',
      isActive: true,
    },
    {
      type: NotificationTemplateType.PROMOTION,
      titleTemplate: 'Khuy·∫øn m√£i m·ªõi',
      messageTemplate: 'C√≥ khuy·∫øn m√£i m·ªõi d√†nh cho b·∫°n!',
      isActive: true,
    },
  ];

  for (const templateData of templates) {
    const template = templateRepository.create(templateData);
    await templateRepository.save(template);
    console.log(`‚úÖ Created template: ${templateData.type}`);
  }

  console.log('üéâ Notification templates seeded successfully!');
}
